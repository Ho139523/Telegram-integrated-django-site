# Generated by Django 5.2.1 on 2025-05-12 16:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(unique=True)),
                ('status', models.BooleanField(default=True, verbose_name='Publish Status')),
                ('position', models.IntegerField(verbose_name='Position')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='ProductCodeCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.BigIntegerField(default=1, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Category Title')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('status', models.BooleanField(default=True, verbose_name='Publish Status')),
                ('position', models.IntegerField(verbose_name='Position')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.category', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='ArticleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Title')),
                ('poster', models.ImageField(upload_to='article_poster/', verbose_name='Artilce Poster')),
                ('context', models.TextField(max_length=5000, verbose_name='Description')),
                ('status', models.BooleanField(default=False, verbose_name='Publish Status')),
                ('slug', models.SlugField(unique=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='tutorial_attachments/', verbose_name='Attachments')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('time_takes', models.IntegerField(verbose_name='Time it takes to read it')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_authored', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.categorymodel', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Product Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('brand', models.CharField(blank=True, max_length=50, null=True, verbose_name='Brand')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Price')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Discount (%)')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Stock')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='product_images/', verbose_name='Main Image')),
                ('code', models.CharField(blank=True, editable=False, max_length=10, unique=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.category', verbose_name='Category')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profilemodel', to='accounts.profilemodel')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, verbose_name='Attribute Key')),
                ('value', models.CharField(max_length=100, verbose_name='Attribute Value')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/', verbose_name='Product Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_set', to='products.product', verbose_name='Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='additional_images',
            field=models.ManyToManyField(blank=True, related_name='product_images', to='products.productimage'),
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Store Name')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('province', models.CharField(max_length=50, verbose_name='Province')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='store_logos/', verbose_name='Store Logo')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store', to='accounts.profilemodel')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_store', to='products.store', verbose_name='Store'),
        ),
        migrations.AddField(
            model_name='category',
            name='stores',
            field=models.ManyToManyField(blank=True, related_name='categories', to='products.store', verbose_name='Stores'),
        ),
        migrations.CreateModel(
            name='TutorialModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Title')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('video', models.FileField(upload_to='tutorial_videos/', verbose_name='Video')),
                ('video_poster', models.ImageField(upload_to='tutorial_posters/', verbose_name='Video Poster')),
                ('poster', models.ImageField(upload_to='tutorial_poster/', verbose_name='Tutorial Poster')),
                ('about', models.TextField(max_length=5000, verbose_name='Description')),
                ('status', models.BooleanField(default=False, verbose_name='Publish Status')),
                ('slug', models.SlugField(unique=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='tutorial_attachments/', verbose_name='Attachments')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('installment', models.BooleanField(default=False, verbose_name='Installment Purchase')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutorials_authored', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.categorymodel', verbose_name='Tag')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tutorials_taught', to=settings.AUTH_USER_MODEL, verbose_name='Teacher')),
            ],
            options={
                'verbose_name': 'Tutorial',
                'verbose_name_plural': 'Toturials',
                'ordering': ['created'],
            },
        ),
    ]
